@page "/movie/{id:int}"
@inject TMDBClient TMDB


@if(movieDetails is null)
{
    <p><em>Loading the movie...</em></p>
}
else
{

    <PageTitle>@movieDetails.Title</PageTitle>
    <!--Page Banner-->
    <div class="hero-bg" style="@($"--bg-img: url(https://image.tmdb.org/t/p/original/{movieDetails.BackdropPath})")">
        <div class="hero-container">
            <div class="container-xxl d-flex flex-column flex-md-row">
                <!--title content goes here-->
                <div class="flex-grow-1 d-flex align-items-center justify-content-center justify-content-md-end">
                    <div class="title-container text-center text-md-end">
                        <h1 class="text-light">@movieDetails.Title</h1>
                        <h2 class="text-light">@movieDetails.Tagline</h2>
                        @if(DateTime.TryParse(movieDetails.ReleaseDate, out DateTime releaseDate))
                        {
                            <span class="badge me-2 text-bg-light">@releaseDate.ToString("MMM dd yyy")</span>
                        }
                        @{
                            var runtime = $"{movieDetails.Runtime / 60}h {movieDetails.Runtime % 60}m";
                            var rating = (movieDetails.VoteAverage * 10).ToString("F1");
                        }
                        <span class="badge me-2 text-bg-dark">@runtime</span>
                        <span class="badge me-2 text-bg-success">@rating% <i class="bi bi-stars"></i></span>
                        <div class="movie-links">
                            <div class="d-flex justify-content-center justify-content-md-end p-3">
                           
                                @if(!string.IsNullOrEmpty(movieDetails.Homepage)){
                                    <div class="text-center px-2">
                                        <a href="@movieDetails.Homepage" target="_blank" class="btn btn-outline-light rounded-pill">
                                           Website                                          
                                        </a>
                                    </div>
                                }

                                @if(!string.IsNullOrEmpty(movieDetails.ImdbId)){
                                    <div class="text-center px-2">
                                        <a href="@($"https://www.imdb.com/title/{movieDetails.ImdbId}")" target="_blank" class="btn btn-outline-warning rounded-pill">
                                            IMDB
                                        </a>
                                    </div>
                                })
                            </div>
                        </div>

                    </div>
                </div>
                <div class="order-last order-md-first d-flex justify-content-center">
                    <div class="poster-container">
                        @if (string.IsNullOrEmpty(movieDetails.PosterPath))
                        {
                            <img src="/images/PosterPlaceHolder.png" alt="Movie Poster" />
                        }
                        else
                        {
                            <img src="@($"https://image.tmdb.org/t/p/w500/{movieDetails.PosterPath}")" alt="Movie Poster" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-xxl">
        <div class="overview d-flex flex-column">
            <p>@movieDetails.Overview</p>
            
            @if (movieDetails.SpokenLanguages.Any())
            {
                <div>
                    Languages: @string.Join(", ", movieDetails.SpokenLanguages.Select(sl => sl.EnglishName))
                </div>
            }
        </div>
        
    </div>
    
}

@code {
    [Parameter]
    public int Id { get; set; }

    private MovieDetails? movieDetails;

    protected override async Task OnInitializedAsync()
    {
        movieDetails = await TMDB.GetMovieDetailsAsync(Id);
    }

}
